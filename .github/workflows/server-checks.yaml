# This is a basic workflow to help you get started with Actions
name: 🗄️ Server
env:
  FORCE_COLOR: true

on:
  workflow_call:
  workflow_dispatch:

jobs:
  server-checks:
    name: 📋 Checks ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚒️  Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: ./server/go.mod
          cache-dependency-path: ./server/go.sum

      - name: 🛠️ Build
        working-directory: server
        run: |
          go build ./...
          echo "### Build completed on ${{ matrix.os }}" >> $GITHUB_STEP_SUMMARY

      - name: 📋 Run Tests
        working-directory: server
        run: |
          go tool ginkgo run --output-dir reports --cover --covermode atomic -coverprofile=coverage.out ./...
          echo "### Test Results (${{ matrix.os }})" >> $GITHUB_STEP_SUMMARY
          if [ -f reports/coverage.out ]; then
            COVERAGE=$(go tool cover -func=reports/coverage.out | grep total | awk '{print $3}')
            echo "- Code coverage: $COVERAGE" >> $GITHUB_STEP_SUMMARY
          else
            echo "- No coverage report found." >> $GITHUB_STEP_SUMMARY
          fi

      - name: 🔍 Run linting
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          working-directory: server
      - name: 📝 Lint Summary
        run: |
          echo "### Linting (${{ matrix.os }})" >> $GITHUB_STEP_SUMMARY
          echo "- Linting completed. See workflow logs for details." >> $GITHUB_STEP_SUMMARY

      - name: 📝 Reporting
        run: |
          echo "✅ Server checks completed for ${{ matrix.os }}." >> $GITHUB_STEP_SUMMARY
