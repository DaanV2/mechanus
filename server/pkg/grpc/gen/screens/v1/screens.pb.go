// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: screens/v1/screens.proto

package screensv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScreenRole int32

const (
	ScreenRole_Unknown  ScreenRole = 0
	ScreenRole_Device   ScreenRole = 1
	ScreenRole_Viewer   ScreenRole = 2
	ScreenRole_Player   ScreenRole = 3
	ScreenRole_Operator ScreenRole = 4
	ScreenRole_Admin    ScreenRole = 5
)

// Enum value maps for ScreenRole.
var (
	ScreenRole_name = map[int32]string{
		0: "Unknown",
		1: "Device",
		2: "Viewer",
		3: "Player",
		4: "Operator",
		5: "Admin",
	}
	ScreenRole_value = map[string]int32{
		"Unknown":  0,
		"Device":   1,
		"Viewer":   2,
		"Player":   3,
		"Operator": 4,
		"Admin":    5,
	}
)

func (x ScreenRole) Enum() *ScreenRole {
	p := new(ScreenRole)
	*p = x
	return p
}

func (x ScreenRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScreenRole) Descriptor() protoreflect.EnumDescriptor {
	return file_screens_v1_screens_proto_enumTypes[0].Descriptor()
}

func (ScreenRole) Type() protoreflect.EnumType {
	return &file_screens_v1_screens_proto_enumTypes[0]
}

func (x ScreenRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScreenRole.Descriptor instead.
func (ScreenRole) EnumDescriptor() ([]byte, []int) {
	return file_screens_v1_screens_proto_rawDescGZIP(), []int{0}
}

type ScreenListenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role ScreenRole `protobuf:"varint,1,opt,name=role,proto3,enum=screens.v1.ScreenRole" json:"role,omitempty"`
	// For certain roles a identifiying token is required
	Token *string `protobuf:"bytes,2,opt,name=token,proto3,oneof" json:"token,omitempty"`
	// For certain roles (such as devices) and identifier is needed
	Id *string `protobuf:"bytes,3,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *ScreenListenRequest) Reset() {
	*x = ScreenListenRequest{}
	mi := &file_screens_v1_screens_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScreenListenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenListenRequest) ProtoMessage() {}

func (x *ScreenListenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_screens_v1_screens_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenListenRequest.ProtoReflect.Descriptor instead.
func (*ScreenListenRequest) Descriptor() ([]byte, []int) {
	return file_screens_v1_screens_proto_rawDescGZIP(), []int{0}
}

func (x *ScreenListenRequest) GetRole() ScreenRole {
	if x != nil {
		return x.Role
	}
	return ScreenRole_Unknown
}

func (x *ScreenListenRequest) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *ScreenListenRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type ScreenUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action []*ScreenAction `protobuf:"bytes,1,rep,name=action,proto3" json:"action,omitempty"`
}

func (x *ScreenUpdate) Reset() {
	*x = ScreenUpdate{}
	mi := &file_screens_v1_screens_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScreenUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenUpdate) ProtoMessage() {}

func (x *ScreenUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_screens_v1_screens_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenUpdate.ProtoReflect.Descriptor instead.
func (*ScreenUpdate) Descriptor() ([]byte, []int) {
	return file_screens_v1_screens_proto_rawDescGZIP(), []int{1}
}

func (x *ScreenUpdate) GetAction() []*ScreenAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type ScreenAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*ScreenAction_SplashScreen
	//	*ScreenAction_SceneChange
	//	*ScreenAction_SceneChangeCompleted
	Action isScreenAction_Action `protobuf_oneof:"action"`
}

func (x *ScreenAction) Reset() {
	*x = ScreenAction{}
	mi := &file_screens_v1_screens_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScreenAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenAction) ProtoMessage() {}

func (x *ScreenAction) ProtoReflect() protoreflect.Message {
	mi := &file_screens_v1_screens_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenAction.ProtoReflect.Descriptor instead.
func (*ScreenAction) Descriptor() ([]byte, []int) {
	return file_screens_v1_screens_proto_rawDescGZIP(), []int{2}
}

func (m *ScreenAction) GetAction() isScreenAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *ScreenAction) GetSplashScreen() *SplashScreen {
	if x, ok := x.GetAction().(*ScreenAction_SplashScreen); ok {
		return x.SplashScreen
	}
	return nil
}

func (x *ScreenAction) GetSceneChange() *SceneChange {
	if x, ok := x.GetAction().(*ScreenAction_SceneChange); ok {
		return x.SceneChange
	}
	return nil
}

func (x *ScreenAction) GetSceneChangeCompleted() *SceneChangeCompleted {
	if x, ok := x.GetAction().(*ScreenAction_SceneChangeCompleted); ok {
		return x.SceneChangeCompleted
	}
	return nil
}

type isScreenAction_Action interface {
	isScreenAction_Action()
}

type ScreenAction_SplashScreen struct {
	SplashScreen *SplashScreen `protobuf:"bytes,1,opt,name=splash_screen,json=splashScreen,proto3,oneof"`
}

type ScreenAction_SceneChange struct {
	SceneChange *SceneChange `protobuf:"bytes,2,opt,name=scene_change,json=sceneChange,proto3,oneof"`
}

type ScreenAction_SceneChangeCompleted struct {
	SceneChangeCompleted *SceneChangeCompleted `protobuf:"bytes,3,opt,name=scene_change_completed,json=sceneChangeCompleted,proto3,oneof"`
}

func (*ScreenAction_SplashScreen) isScreenAction_Action() {}

func (*ScreenAction_SceneChange) isScreenAction_Action() {}

func (*ScreenAction_SceneChangeCompleted) isScreenAction_Action() {}

var File_screens_v1_screens_proto protoreflect.FileDescriptor

var file_screens_v1_screens_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x0c, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf1, 0x01,
	0x0a, 0x0c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f,
	0x0a, 0x0d, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48,
	0x00, 0x52, 0x0c, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12,
	0x3c, 0x0a, 0x0c, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0b, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x58, 0x0a,
	0x16, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x14, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2a, 0x56, 0x0a, 0x0a, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x10, 0x04, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x05, 0x32, 0x5d, 0x0a, 0x0e, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x30, 0x01, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x61, 0x6e, 0x56, 0x32, 0x2f, 0x6d, 0x65,
	0x63, 0x68, 0x61, 0x6e, 0x75, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_screens_v1_screens_proto_rawDescOnce sync.Once
	file_screens_v1_screens_proto_rawDescData = file_screens_v1_screens_proto_rawDesc
)

func file_screens_v1_screens_proto_rawDescGZIP() []byte {
	file_screens_v1_screens_proto_rawDescOnce.Do(func() {
		file_screens_v1_screens_proto_rawDescData = protoimpl.X.CompressGZIP(file_screens_v1_screens_proto_rawDescData)
	})
	return file_screens_v1_screens_proto_rawDescData
}

var file_screens_v1_screens_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_screens_v1_screens_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_screens_v1_screens_proto_goTypes = []any{
	(ScreenRole)(0),              // 0: screens.v1.ScreenRole
	(*ScreenListenRequest)(nil),  // 1: screens.v1.ScreenListenRequest
	(*ScreenUpdate)(nil),         // 2: screens.v1.ScreenUpdate
	(*ScreenAction)(nil),         // 3: screens.v1.ScreenAction
	(*SplashScreen)(nil),         // 4: screens.v1.SplashScreen
	(*SceneChange)(nil),          // 5: screens.v1.SceneChange
	(*SceneChangeCompleted)(nil), // 6: screens.v1.SceneChangeCompleted
}
var file_screens_v1_screens_proto_depIdxs = []int32{
	0, // 0: screens.v1.ScreenListenRequest.role:type_name -> screens.v1.ScreenRole
	3, // 1: screens.v1.ScreenUpdate.action:type_name -> screens.v1.ScreenAction
	4, // 2: screens.v1.ScreenAction.splash_screen:type_name -> screens.v1.SplashScreen
	5, // 3: screens.v1.ScreenAction.scene_change:type_name -> screens.v1.SceneChange
	6, // 4: screens.v1.ScreenAction.scene_change_completed:type_name -> screens.v1.SceneChangeCompleted
	1, // 5: screens.v1.ScreensService.ListenUpdate:input_type -> screens.v1.ScreenListenRequest
	2, // 6: screens.v1.ScreensService.ListenUpdate:output_type -> screens.v1.ScreenUpdate
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_screens_v1_screens_proto_init() }
func file_screens_v1_screens_proto_init() {
	if File_screens_v1_screens_proto != nil {
		return
	}
	file_screens_v1_scene_actions_proto_init()
	file_screens_v1_splash_screen_proto_init()
	file_screens_v1_screens_proto_msgTypes[0].OneofWrappers = []any{}
	file_screens_v1_screens_proto_msgTypes[2].OneofWrappers = []any{
		(*ScreenAction_SplashScreen)(nil),
		(*ScreenAction_SceneChange)(nil),
		(*ScreenAction_SceneChangeCompleted)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_screens_v1_screens_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_screens_v1_screens_proto_goTypes,
		DependencyIndexes: file_screens_v1_screens_proto_depIdxs,
		EnumInfos:         file_screens_v1_screens_proto_enumTypes,
		MessageInfos:      file_screens_v1_screens_proto_msgTypes,
	}.Build()
	File_screens_v1_screens_proto = out.File
	file_screens_v1_screens_proto_rawDesc = nil
	file_screens_v1_screens_proto_goTypes = nil
	file_screens_v1_screens_proto_depIdxs = nil
}
