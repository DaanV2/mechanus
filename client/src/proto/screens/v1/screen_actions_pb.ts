// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file screens/v1/screen_actions.proto (package screens.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message screens.v1.SceneChange
 */
export class SceneChange extends Message<SceneChange> {
  /**
   * The id of the new scene to load
   *
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<SceneChange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "screens.v1.SceneChange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SceneChange {
    return new SceneChange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SceneChange {
    return new SceneChange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SceneChange {
    return new SceneChange().fromJsonString(jsonString, options);
  }

  static equals(a: SceneChange | PlainMessage<SceneChange> | undefined, b: SceneChange | PlainMessage<SceneChange> | undefined): boolean {
    return proto3.util.equals(SceneChange, a, b);
  }
}

/**
 * Marks that the server thinks the scene load is complete
 *
 * @generated from message screens.v1.SceneChangeCompleted
 */
export class SceneChangeCompleted extends Message<SceneChangeCompleted> {
  constructor(data?: PartialMessage<SceneChangeCompleted>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "screens.v1.SceneChangeCompleted";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SceneChangeCompleted {
    return new SceneChangeCompleted().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SceneChangeCompleted {
    return new SceneChangeCompleted().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SceneChangeCompleted {
    return new SceneChangeCompleted().fromJsonString(jsonString, options);
  }

  static equals(a: SceneChangeCompleted | PlainMessage<SceneChangeCompleted> | undefined, b: SceneChangeCompleted | PlainMessage<SceneChangeCompleted> | undefined): boolean {
    return proto3.util.equals(SceneChangeCompleted, a, b);
  }
}

